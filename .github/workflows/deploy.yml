name: deploy
on:
  push:
    branches: ["main"]
    tags: ["v*"]
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rsync-and-restart:
    runs-on: ubuntu-latest
    env:
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_KEY:  ${{ secrets.SSH_KEY }}
    steps:
      - uses: actions/checkout@v4

      - name: Verify required secrets
        run: |
          [ -n "$SSH_HOST" ] && [ -n "$SSH_USER" ] && [ -n "$SSH_KEY" ] \
            || { echo "Missing secrets SSH_HOST/SSH_USER/SSH_KEY"; exit 1; }

      - name: Ensure remote path exists
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ env.SSH_KEY }}
          script: |
            set -euo pipefail
            mkdir -p /opt/hardlock

      - name: Rsync repo (safe; keep server .env & configs)
        uses: burnett01/rsync-deployments@7.0.1
        with:
          switches: -az --exclude '.git/' --exclude '.github/' --exclude '.env' --exclude 'DEPLOY_TRIGGER'
          path: ./
          remote_path: /opt/hardlock/
          remote_host: ${{ env.SSH_HOST }}
          remote_user: ${{ env.SSH_USER }}
          remote_key: ${{ env.SSH_KEY }}

      - name: Restart stack (compose plugin or docker-compose) with diagnostics
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ env.SSH_KEY }}
          script: |
            set -euo pipefail
            echo "== Host info =="; uname -a || true; whoami || true; id || true
            echo "== Docker info =="; command -v docker || true; docker --version || true
            echo "== Compose detection =="
            if docker compose version >/dev/null 2>&1; then C="docker compose"; echo "Using: docker compose"
            elif command -v docker-compose >/dev/null 2>&1; then C="docker-compose"; echo "Using: docker-compose"
            else echo "ERROR: no docker compose found"; exit 12; fi
            echo "== Project dir =="; cd /opt/hardlock || { echo "ERROR: /opt/hardlock missing"; exit 10; }
            echo "== Listing /opt/hardlock =="; ls -la || true
            test -f docker-compose.yml || { echo "ERROR: docker-compose.yml missing"; exit 11; }
            echo "== Validate compose config =="; $C -f docker-compose.yml config >/dev/null || { echo "ERROR: compose config invalid"; $C -f docker-compose.yml config; exit 13; }
            echo "== Build =="; $C build || { echo "ERROR: compose build failed"; exit 14; }
            echo "== Up -d =="; $C up -d --remove-orphans || { echo "ERROR: compose up failed"; exit 15; }
            echo "== Status =="
            if command -v /usr/local/bin/hardlock-status >/dev/null 2>&1; then /usr/local/bin/hardlock-status || true
            else $C ps || true; fi
